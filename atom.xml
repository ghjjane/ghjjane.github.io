<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ghjjane</title>
  
  <subtitle>一个程序媛</subtitle>
  <link href="https://ghjjane.github.io/atom.xml" rel="self"/>
  
  <link href="https://ghjjane.github.io/"/>
  <updated>2024-09-05T01:21:48.180Z</updated>
  <id>https://ghjjane.github.io/</id>
  
  <author>
    <name>ghj</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>用Flutter Intl 实现项目国际化</title>
    <link href="https://ghjjane.github.io/2024/09/05/Flutter_Intl/"/>
    <id>https://ghjjane.github.io/2024/09/05/Flutter_Intl/</id>
    <published>2024-09-05T00:37:19.000Z</published>
    <updated>2024-09-05T01:21:48.180Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>前言： 因为之前公司项目中做过iOS的国际化，学了Flutter之后也想试着做国际化相关的东西，这段时间闲在家里，就一边对之前的项目进行一个总结，一边研究一下之前想搞而没有时间搞的东西。其中Flutter的国际化就是其中之一</p></blockquote><h5 id="Flutter-Intl-既支持Android-Studio也支持VS-Code，本文以Android-Studio为例："><a href="#Flutter-Intl-既支持Android-Studio也支持VS-Code，本文以Android-Studio为例：" class="headerlink" title="Flutter Intl 既支持Android Studio也支持VS Code，本文以Android Studio为例："></a>Flutter Intl 既支持Android Studio也支持VS Code，本文以Android Studio为例：</h5><h4 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h4><p>步骤：Android Studio —&gt;Settings —&gt;Plugins —&gt; Marketplace —&gt; 搜索框输入Intl —&gt; Install  </p><blockquote><p>注：因为我已经下载过了，所以图中没有install按钮，如果没有下载过的同学在下图中用红框圈住的右下角会有Install按钮</p></blockquote><img src="/2024/09/05/Flutter_Intl/WX20240904-145537@2x.png" class title="60da9bbb6093f5f04c8e5b5a111902ab"><h4 id="项目国际化前期准备"><a href="#项目国际化前期准备" class="headerlink" title="项目国际化前期准备"></a>项目国际化前期准备</h4><p>下载完Flutter Intl 之后在Android Studio顶部菜单栏Tool下就会出现Flutter Intl选项，如下图中的2、</p><img src="/2024/09/05/Flutter_Intl/WX20240905-082951@2x.png" class title="b24b9bf0973195b430df7bb0e1c36839"><p>点击图中3、之后项目中lib文件夹下就会多出两个文件夹：</p><img src="/2024/09/05/Flutter_Intl/WX20240904-150856@2x.png" class title="0292921595424339a0bed7d0c725c8e1"><p>这里把重要文件说明一下</p><ul><li>I10n.dart: <strong>S</strong>对象，代码中国际的时候需要用到的主要对象</li><li>intl_en.arb: 存放的就是我们英文文案需要国际化的字段。以json的形式存放</li></ul><p>打开intl_en.arb文件，里面目前是空的，这里面存放的就是我们英文文案需要国际化的字段。以json的形式存放。如下图</p><img src="/2024/09/05/Flutter_Intl/WX20240904-151729@2x.png" class title="619bb76b8b69475342021ce661c7faea"><p>把需要国际化的文案放如之后保存：<code>command + s</code><br>Flutter Intl会帮我们把刚才的字段自动动的生成get方法。</p><h4 id="添加新的国际化语言"><a href="#添加新的国际化语言" class="headerlink" title="添加新的国际化语言"></a>添加新的国际化语言</h4><p>如果要添加新的需要国际化的语言（以中文为例）：步骤 Tool —&gt; Flutter Intl —&gt; Add Locale </p><img src="/2024/09/05/Flutter_Intl/WX20240905-082004@2x.png" class title="991f56fe605ec10844b79ef9e2bb7a0a"><p>这个时候项目中会多出两个文件 </p><img src="/2024/09/05/Flutter_Intl/WX20240905-082326@2x.png" class title="babb52e2d4bbe45a29279c92b3817d0b"><p>之后和上面添加英语国际化字段一样，把需要中文翻译的字段以json的形式放入intl_zh.arb中然后<code>command + s</code>。这样中文国际化就完成了<br>到这里前期的准备也就做完了</p><h4 id="项目中使用"><a href="#项目中使用" class="headerlink" title="项目中使用"></a>项目中使用</h4><ul><li>1、在项目的main函数中找到<code>MaterialApp</code>在</li><li>2、supportedLocales添加S.delegate.supportedLocales</li><li>3、在localizationsDelegates中添加S.delegate<br>具体代码如下<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">class GHJApp extends StatelessWidget &#123;</span><br><span class="line">  const GHJApp(&#123;super.key&#125;);</span><br><span class="line">  @override</span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    return MaterialApp(</span><br><span class="line">      home: GHJHomePage(),</span><br><span class="line">      theme: ThemeData(</span><br><span class="line">        highlightColor: Colors.transparent</span><br><span class="line">      ),</span><br><span class="line">      // 国际化需要支持的语言</span><br><span class="line">      supportedLocales: S.delegate.supportedLocales, // 从S对象中获取</span><br><span class="line">      // 设置widgets需要国际化</span><br><span class="line">      localizationsDelegates: const [</span><br><span class="line">        S.delegate,// 添加S的delegate</span><br><span class="line">        GlobalMaterialLocalizations.delegate,</span><br><span class="line">        GlobalWidgetsLocalizations.delegate,</span><br><span class="line">        GlobalCupertinoLocalizations.delegate,</span><br><span class="line">        // GHJLocalizationsDelegate.delegate,</span><br><span class="line">      ],</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>4、在需要使用的时候直接用<code>S.of(context).</code>例如<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Text(S.of(context).home_page_hello)</span><br></pre></td></tr></table></figure></li></ul><h5 id="到此国际化基本操作就完成了"><a href="#到此国际化基本操作就完成了" class="headerlink" title="到此国际化基本操作就完成了"></a>到此国际化基本操作就完成了</h5>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;前言： 因为之前公司项目中做过iOS的国际化，学了Flutter之后也想试着做国际化相关的东西，这段时间闲在家里，就一边对之前的项目进行一个总结，一边研究一下之前想搞而没有时间搞的东西。其中Flutter的国际化就是其中之一&lt;/p&gt;
&lt;/block</summary>
      
    
    
    
    
    <category term="Flutter Intl" scheme="https://ghjjane.github.io/tags/Flutter-Intl/"/>
    
  </entry>
  
  <entry>
    <title>Hexo使用主题hexo-theme-matery提交报错问题总结</title>
    <link href="https://ghjjane.github.io/2024/09/02/Hexo%E4%BD%BF%E7%94%A8%E4%B8%BB%E9%A2%98hexo-theme-matery%E6%8F%90%E4%BA%A4%E6%8A%A5%E9%94%99%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/"/>
    <id>https://ghjjane.github.io/2024/09/02/Hexo%E4%BD%BF%E7%94%A8%E4%B8%BB%E9%A2%98hexo-theme-matery%E6%8F%90%E4%BA%A4%E6%8A%A5%E9%94%99%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/</id>
    <published>2024-09-02T08:00:19.000Z</published>
    <updated>2024-09-04T02:49:37.791Z</updated>
    
    <content type="html"><![CDATA[<p>1、Hexo在使用hexo-theme-matery主题第一次提交到github的时候，使用命令：</p><blockquote><p>hexo d</p></blockquote><p>终端报错，信息如下</p><blockquote><p>error: GH013: Repository rule violations found for refs&#x2F;heads&#x2F;master.</p></blockquote><img src="/2024/09/02/Hexo%E4%BD%BF%E7%94%A8%E4%B8%BB%E9%A2%98hexo-theme-matery%E6%8F%90%E4%BA%A4%E6%8A%A5%E9%94%99%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/WX20240903-124155@2x.png" class title="终端报错信息"><p><a href="https://blog.51cto.com/u_12763213/10979913">在网上找到了答案解决办法，使用第三种方案</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;1、Hexo在使用hexo-theme-matery主题第一次提交到github的时候，使用命令：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;hexo d&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;终端报错，信息如下&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;error: GH</summary>
      
    
    
    
    
    <category term="hexo hexo-theme-matery" scheme="https://ghjjane.github.io/tags/hexo-hexo-theme-matery/"/>
    
  </entry>
  
</feed>
